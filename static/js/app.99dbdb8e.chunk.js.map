{"version":3,"sources":["utils/colors.js","components/AppStatusBar.component.js","actions/index.js","reducers/index.js","middlewares/logger.middleware.js","middlewares/index.js","backend/Flashcards.backend.js","services/Flashcards.service.js","components/DeckCard.component.js","Views/DeckList.component.js","components/SubmitButton.component.js","Views/AddDeck.component.js","components/TabNav.component.js","components/TextButton.component.js","Views/DeckCardDetail.component.js","Views/AddCard.component.js","Views/Quiz.component.js","components/MainNav.component.js","App.js","web-build/register-service-worker.js"],"names":["WHITE","RED","YELLOW","ORANGE","AppStatusBarComponent","backgroundColor","props","View","style","height","Constants","statusBarHeight","StatusBar","translucent","APP_ACTION_TYPES","decks","state","action","type","title","questions","newState","card","concat","logger","store","next","console","group","log","result","getState","groupEnd","applyMiddleware","thunk","FlashcardsBackend","userToken","this","FLASHCARD_STORAGE_KEY","Promise","resolve","reject","a","async","AsyncStorage","getItem","results","JSON","parse","getDecks","newDecks","setItem","stringify","mergeItem","questionCard","push","FlashCardsService","userKey","flashCardMockBackEnd","getDeck","saveDeckTitle","removeDeckTitle","addCardToDeck","Object","keys","map","key","formatDeck","deck","id","counts","length","DeckCardComponent","navigation","disabled","alignItems","TouchableOpacity","onPress","navigate","activeOpacity","styles","item","header","Text","body","color","marginRight","Component","StyleSheet","create","borderRadius","padding","marginTop","marginBottom","borderColor","borderWidth","maxWidth","minWidth","flex","flexDirection","justifyContent","fontSize","connect","DeckListComponent","deckCards","formatDecks","SafeAreaView","container","FlatList","data","renderItem","keyExtractor","dispatch","flashCardsService","iosSubmitBtn","paddingLeft","paddingRight","alignSelf","androidSubmitBtn","submitBtnText","textAlign","SubmitButtonComponent","Platform","OS","AddDeckComponent","changeTitle","newValue","setState","toDeckDetailPage","submit","TextInput","placeholder","placeholderTextColor","inputField","onChangeText","value","TabNavComponent","Tabs","createBottomTabNavigator","createMaterialTopTabNavigator","Navigator","initialRouteName","screenOptions","route","tabBarIcon","size","name","MaterialCommunityIcons","FontAwesome","tabBarOptions","activeTintColor","showIcon","indicatorStyle","shadowColor","shadowOffset","width","shadowRadius","shadowOpacity","Screen","component","reset","TextButton","children","DeckCardDetailComponent","toAddCard","toQuiz","toHome","removeDeck","nextProps","nextState","nextContext","deckCard","setOptions","buttonContainer","params","AddCardComponent","question","answer","toDeckDetail","changeQuestions","changeAnswer","addCard","ResultComponent","score","resultContainer","CardComponent","content","QuizComponent","questionNumber","done","showAnswer","nextQuestion","incrementScore","flip","isCorrect","max","Fragment","statusBarItem","footer","onSubmitAnswer","Stack","createStackNavigator","MainNavComponent","headerMode","options","headerShown","headerTintColor","headerStyle","headerStatusBarHeight","headerTitleAlign","App","createStore","reducer","middleware","NavigationContainer","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.99dbdb8e.chunk.js","sourcesContent":["export const WHITE = '#fff'\r\nexport const PURPLE = '#a64Ac9'\r\nexport const RED = '#e91721'\r\nexport const YELLOW = '#fccd04'\r\nexport const ORANGE = '#ff6e29'\r\nexport const PINK = '#ffb48f'\r\nexport const CHAMPAGNE = '#f5e6cc'\r\nexport const BLUE = '#17e9e0'\r\nexport const BLACK = '#000'\r\n","import React from 'react';\r\nimport Constants from \"expo-constants\";\r\n\r\nimport {StatusBar, View} from 'react-native';\r\n\r\nfunction AppStatusBarComponent({backgroundColor, ...props}) {\r\n    return (\r\n        <View style={{backgroundColor, height: Constants.statusBarHeight}}>\r\n            <StatusBar translucent backgroundColor={backgroundColor} {...props}/>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default AppStatusBarComponent;\r\n","export const APP_ACTION_TYPES = {\r\n    RECEIVE_DECKS: \"RECEIVE_DECKS\",\r\n    ADD_DECK: \"ADD_DECK\",\r\n    REMOVE_DECK: \"REMOVE_DECK\",\r\n    ADD_CARD: \"ADD_CARD\"\r\n};\r\n\r\nexport function receiveDecks(decks) {\r\n    return {\r\n        type: APP_ACTION_TYPES.RECEIVE_DECKS,\r\n        decks\r\n    }\r\n}\r\n\r\nexport function saveDeckTitle(title) {\r\n    return {\r\n        type: APP_ACTION_TYPES.ADD_DECK,\r\n        title\r\n    }\r\n}\r\n\r\nexport function removeDeck(title) {\r\n    return {\r\n        type: APP_ACTION_TYPES.REMOVE_DECK,\r\n        title\r\n    }\r\n}\r\n\r\nexport function addCard(title, card) {\r\n    return {\r\n        type: APP_ACTION_TYPES.ADD_CARD,\r\n        title,\r\n        card\r\n    }\r\n}\r\n","import {APP_ACTION_TYPES} from \"../actions\";\r\n\r\nfunction decks(state = {}, action) {\r\n    switch (action.type) {\r\n        case APP_ACTION_TYPES.RECEIVE_DECKS: {\r\n            return {\r\n                ...state,\r\n                ...action.decks\r\n            }\r\n        }\r\n        case APP_ACTION_TYPES.ADD_DECK: {\r\n            const {title} = action;\r\n            return {\r\n                ...state,\r\n                [title]: {title, questions: []}\r\n            }\r\n        }\r\n        case APP_ACTION_TYPES.REMOVE_DECK: {\r\n            const {title} = action;\r\n            const {[title]: value, ...newState} = state;\r\n            return newState\r\n        }\r\n\r\n        case APP_ACTION_TYPES.ADD_CARD: {\r\n            const {title, card} = action;\r\n            return {\r\n                ...state,\r\n                [title]: {\r\n                    ...state[title],\r\n                    [\"questions\"]: state[title].questions.concat(card)\r\n                }\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default decks;\r\n","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.log('The action: ', action);\r\n    const result = next(action);\r\n    console.log('The new state: ', store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger.middleware\";\r\nimport {applyMiddleware} from \"redux\";\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger\r\n);\r\n","import {AsyncStorage} from 'react-native';\r\n\r\nexport default class FlashcardsBackend {\r\n\r\n    constructor(userToken) {\r\n        this.FLASHCARD_STORAGE_KEY = userToken;\r\n    }\r\n\r\n\r\n    getDecks() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const results = await AsyncStorage.getItem(this.FLASHCARD_STORAGE_KEY, null);\r\n                return resolve(JSON.parse(results));\r\n            } catch (e) {\r\n                return reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    getDeck(title) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const decks = await this.getDecks();\r\n                return resolve(decks[title])\r\n            } catch (e) {\r\n                return reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    removeDeckTitle(title) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const decks = await this.getDecks();\r\n                const {[title]: value, ...newDecks} = decks;\r\n                await AsyncStorage.setItem(this.FLASHCARD_STORAGE_KEY, JSON.stringify(newDecks))\r\n                return resolve(true);\r\n            } catch (e) {\r\n                return reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    saveDeckTitle(title) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                await AsyncStorage.mergeItem(this.FLASHCARD_STORAGE_KEY, JSON.stringify({\r\n                    [title]: {\r\n                        title,\r\n                        questions: []\r\n                    }\r\n                }))\r\n                return resolve(true);\r\n            } catch (e) {\r\n                return reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    addCardToDeck(title, questionCard) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const decks = await this.getDecks();\r\n                decks[title].questions.push(questionCard)\r\n                await AsyncStorage.setItem(this.FLASHCARD_STORAGE_KEY, JSON.stringify(decks));\r\n                return resolve(true);\r\n            } catch (e) {\r\n                return reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import FlashcardsBackend from \"../backend/Flashcards.backend\";\r\n\r\nexport default class FlashCardsService {\r\n\r\n    constructor(userKey) {\r\n        this.flashCardMockBackEnd = new FlashcardsBackend(userKey);\r\n    }\r\n\r\n    static formatDecks(results) {\r\n        return Object.keys(results).map((key) => {\r\n            return FlashCardsService.formatDeck(results[key], key)\r\n        });\r\n    }\r\n\r\n    static formatDeck(deck, id) {\r\n        return {...deck, id, counts: deck.questions.length}\r\n    }\r\n\r\n\r\n    getDecks() {\r\n        return this.flashCardMockBackEnd.getDecks();\r\n    }\r\n\r\n    getDeck(title) {\r\n        return this.flashCardMockBackEnd.getDeck(title);\r\n    }\r\n\r\n    saveDeckTitle(title) {\r\n        return this.flashCardMockBackEnd.saveDeckTitle(title);\r\n    }\r\n\r\n    removeDeckTitle(title) {\r\n        return this.flashCardMockBackEnd.removeDeckTitle(title);\r\n    }\r\n\r\n    addCardToDeck(title, questionCard) {\r\n        return this.flashCardMockBackEnd.addCardToDeck(title, questionCard);\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react'\r\nimport {StyleSheet, Text, TouchableOpacity, View} from 'react-native';\r\nimport {BLACK, BLUE, ORANGE, RED, WHITE, YELLOW} from \"../utils/colors\";\r\nimport {connect} from 'react-redux';\r\n\r\nclass DeckCardComponent extends Component {\r\n    render() {\r\n        const {title, counts, id, navigation, disabled} = this.props;\r\n        return (\r\n            <View style={{alignItems: 'center'}}>\r\n                <TouchableOpacity\r\n                    disabled={disabled}\r\n                    onPress={() => navigation.navigate(\r\n                        'DeckCardDetail',\r\n                        {id}\r\n                    )}\r\n                    activeOpacity={0.5}\r\n                    style={styles.item}>\r\n                    <View style={styles.header}>\r\n                        <Text style={styles.title}>{title}</Text>\r\n                    </View>\r\n                    <View style={styles.body}>\r\n                        <Text style={{\r\n                            color: counts ? YELLOW : RED,\r\n                            marginRight: 5\r\n                        }}>\r\n                            {counts ? counts : \"EMPTY DECK\"}\r\n                        </Text>\r\n                        {counts > 0 &&\r\n                        <Text style={{color: BLUE}}>\r\n                            {counts === 1 ? 'card' : 'cards'}\r\n                        </Text>}\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        borderRadius: 5,\r\n        backgroundColor: BLACK,\r\n        padding: 20,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        borderColor: ORANGE,\r\n        borderWidth: 5,\r\n        height: 100,\r\n        maxWidth: 200,\r\n        minWidth: 200\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        justifyContent: 'center',\r\n    },\r\n    body: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        fontSize: 16,\r\n    },\r\n    title: {\r\n        color: WHITE,\r\n        fontSize: 18,\r\n    }\r\n});\r\n\r\nexport default connect()(DeckCardComponent);\r\n","import React, {Component} from 'react';\r\nimport {FlatList, SafeAreaView, StyleSheet} from 'react-native';\r\nimport {connect} from 'react-redux';\r\nimport FlashCardsService from \"../services/Flashcards.service\";\r\nimport {receiveDecks} from \"../actions\";\r\nimport DeckCardComponent from \"../components/DeckCard.component\";\r\nimport {RED, YELLOW} from \"../utils/colors\";\r\n\r\nclass DeckListComponent extends Component {\r\n\r\n    componentDidMount() {\r\n        const {getDecks} = this.props;\r\n        getDecks();\r\n    }\r\n\r\n    render() {\r\n        const {decks} = this.props;\r\n        const deckCards = FlashCardsService.formatDecks(decks);\r\n        return (\r\n            <SafeAreaView style={styles.container}>\r\n                <FlatList\r\n                    data={deckCards}\r\n                    renderItem={({item}) => {\r\n                        const {title, counts, id} = item;\r\n                        return (<DeckCardComponent title={title} counts={counts} id={id} {...this.props}/>)\r\n                    }}\r\n                    keyExtractor={item => item.id}\r\n                />\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: YELLOW\r\n    }\r\n});\r\n\r\n\r\nfunction mapStateToProps(decks) {\r\n    return {decks};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    const flashCardsService = new FlashCardsService('test');\r\n    return {\r\n        getDecks: async () => {\r\n            const results = await flashCardsService.getDecks();\r\n            dispatch(receiveDecks(results));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeckListComponent);\r\n","import React from 'react';\r\nimport {Platform, StyleSheet, Text, TouchableOpacity} from \"react-native\";\r\n\r\nfunction SubmitButtonComponent(props) {\r\n    const {onPress, color, backgroundColor, title, disabled} = props;\r\n    return (\r\n        <TouchableOpacity\r\n            disabled = {disabled}\r\n            style={[Platform.OS === 'ios' ? styles.iosSubmitBtn : styles.androidSubmitBtn, {backgroundColor}]}\r\n            onPress={onPress}>\r\n            <Text style={[styles.submitBtnText, {color}]}>{title}</Text>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    iosSubmitBtn: {\r\n        padding: 10,\r\n        borderRadius: 25,\r\n        height: 45,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        alignSelf: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    androidSubmitBtn: {\r\n        padding: 10,\r\n        borderRadius: 25,\r\n        height: 45,\r\n        paddingLeft: 50,\r\n        paddingRight: 50,\r\n        alignSelf: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    submitBtnText: {\r\n        fontSize: 22,\r\n        textAlign: 'center'\r\n    },\r\n});\r\n\r\nexport default SubmitButtonComponent;\r\n","import React, {Component} from 'react';\r\nimport {StyleSheet, Text, TextInput, View} from 'react-native';\r\nimport {BLACK, ORANGE, WHITE, YELLOW} from \"../utils/colors\";\r\nimport {connect} from 'react-redux';\r\nimport FlashCardsService from \"../services/Flashcards.service\";\r\nimport {saveDeckTitle} from \"../actions\";\r\nimport SubmitButtonComponent from \"../components/SubmitButton.component\";\r\n\r\nclass AddDeckComponent extends Component {\r\n\r\n    state = {\r\n        title: \"\"\r\n    }\r\n\r\n\r\n    changeTitle = (newValue) => {\r\n        this.setState(() => ({\r\n            title: newValue\r\n        }));\r\n    };\r\n\r\n\r\n    toDeckDetailPage = (id) => {\r\n        const {navigation} = this.props;\r\n        navigation.navigate(\r\n            'DeckCardDetail',\r\n            {id}\r\n        )\r\n    }\r\n\r\n    submit = () => {\r\n\r\n        const {title} = this.state;\r\n        const {saveDeckTitle, flashCardsService} = this.props;\r\n\r\n        saveDeckTitle(title);\r\n\r\n        this.setState(() => ({\r\n            title: \"\"\r\n        }));\r\n\r\n        this.toDeckDetailPage(title);\r\n\r\n        flashCardsService.saveDeckTitle(title);\r\n    };\r\n\r\n\r\n    render() {\r\n        const {title} = this.state;\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>What is the title of you new deck?</Text>\r\n                <TextInput\r\n                    placeholder=\"Deck Title\"\r\n                    placeholderTextColor={BLACK}\r\n                    style={styles.inputField}\r\n                    onChangeText={this.changeTitle}\r\n                    value={title}\r\n                />\r\n                <SubmitButtonComponent disabled={!title} onPress={() => {\r\n                    this.submit(title);\r\n                }} title=\"Create Deck\" color={WHITE} backgroundColor={ORANGE}/>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        backgroundColor: YELLOW,\r\n        justifyContent: 'center'\r\n    },\r\n    inputField: {\r\n        height: 40,\r\n        padding: 10,\r\n        marginBottom: 30,\r\n        borderColor: ORANGE,\r\n        borderWidth: 1\r\n    },\r\n    title: {\r\n        color: ORANGE,\r\n        fontSize: 36,\r\n        textAlign: 'center',\r\n        marginBottom: 30\r\n    }\r\n});\r\n\r\n\r\nfunction mapStateToProps() {\r\n    const flashCardsService = new FlashCardsService('test');\r\n    return {\r\n        flashCardsService\r\n    }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        saveDeckTitle: (title) => dispatch(saveDeckTitle(title))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDeckComponent);\r\n","import React, {Component} from 'react';\r\nimport {FontAwesome, MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\nimport {createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs';\r\nimport DeckListComponent from \"../Views/DeckList.component\";\r\nimport {BLACK, ORANGE, WHITE} from \"../utils/colors\";\r\nimport AddDeckComponent from \"../Views/AddDeck.component\";\r\n\r\nclass TabNavComponent extends Component {\r\n    render() {\r\n        const Tabs =\r\n            Platform.OS === \"ios\"\r\n                ? createBottomTabNavigator()\r\n                : createMaterialTopTabNavigator();\r\n\r\n        return (\r\n            <Tabs.Navigator\r\n                initialRouteName=\"Decks\"\r\n                screenOptions={({route}) => ({\r\n                    tabBarIcon: ({color, size}) => {\r\n                        switch (route.name) {\r\n                            case \"Decks\": {\r\n                                return <MaterialCommunityIcons name=\"cards-outline\" size={size} color={color}/>\r\n                            }\r\n                            case \"Add Deck\": {\r\n                                return <FontAwesome name=\"plus-square\" size={size} color={color}/>\r\n                            }\r\n                            default:\r\n                                return \"\"\r\n                        }\r\n                    }\r\n                })}\r\n                tabBarOptions={{\r\n                    header: null,\r\n                    activeTintColor: WHITE,\r\n                    showIcon: Platform.OS === \"ios\",\r\n                    indicatorStyle: {\r\n                        backgroundColor: WHITE,\r\n                    },\r\n                    style: {\r\n                        height: Platform.OS === \"ios\" ? 80 : 50,\r\n                        backgroundColor: ORANGE,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.24)\",\r\n                        shadowOffset: {\r\n                            width: 0,\r\n                            height: 3\r\n                        },\r\n                        shadowRadius: 6,\r\n                        shadowOpacity: 1\r\n                    }\r\n                }}\r\n            >\r\n                <Tabs.Screen name=\"Decks\" component={DeckListComponent}/>\r\n                <Tabs.Screen name=\"Add Deck\" component={AddDeckComponent}/>\r\n            </Tabs.Navigator>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabNavComponent;\r\n","import React from 'react';\r\nimport {StyleSheet, Text, TouchableOpacity} from 'react-native'\r\nimport {RED} from \"../utils/colors\";\r\n\r\nfunction TextButton({children, onPress, style}) {\r\n    return (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <Text style={[styles.reset, style]}>{children}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    reset: {\r\n        textAlign: \"center\",\r\n        color: RED\r\n    }\r\n});\r\n\r\nexport default TextButton;\r\n","import React, {Component} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport {connect} from 'react-redux';\r\nimport DeckCardComponent from \"../components/DeckCard.component\";\r\nimport FlashCardsService from \"../services/Flashcards.service\";\r\nimport SubmitButtonComponent from \"../components/SubmitButton.component\";\r\nimport {BLUE, PURPLE, WHITE, YELLOW} from \"../utils/colors\";\r\nimport TextButton from \"../components/TextButton.component\";\r\nimport {removeDeck} from \"../actions\";\r\n\r\nclass DeckCardDetailComponent extends Component {\r\n\r\n\r\n    toAddCard = () => {\r\n        const {navigation, id} = this.props;\r\n        navigation.navigate(\r\n            'AddCard',\r\n            {id}\r\n        )\r\n    }\r\n\r\n    toQuiz = () => {\r\n        const {navigation, id} = this.props;\r\n        navigation.navigate(\r\n            'Quiz',\r\n            {id}\r\n        )\r\n    };\r\n\r\n    toHome = () => {\r\n        const {navigation} = this.props;\r\n        navigation.navigate(\r\n            'Home',\r\n        )\r\n    };\r\n\r\n    removeDeck = () => {\r\n        const {id, flashCardsService, removeDeckTitle} = this.props;\r\n\r\n        removeDeckTitle(id);\r\n\r\n        this.toHome();\r\n\r\n        flashCardsService.removeDeckTitle(id);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return !!nextProps.id;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {navigation} = this.props;\r\n        const {deckCard} = this.props;\r\n        navigation.setOptions({title: deckCard.title})\r\n    }\r\n\r\n    render() {\r\n        const {deckCard} = this.props;\r\n        const {title, counts, id} = deckCard;\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.header}>\r\n                    <DeckCardComponent\r\n                        title={title}\r\n                        counts={counts}\r\n                        id={id}\r\n                        disabled={true}\r\n                        {...this.props}/>\r\n                </View>\r\n                <View style={styles.buttonContainer}>\r\n                    <SubmitButtonComponent onPress={() => {\r\n                        this.toAddCard();\r\n                    }} title=\"Add Card\" color={WHITE} backgroundColor={PURPLE}/>\r\n                    <SubmitButtonComponent onPress={() => {\r\n                        this.toQuiz();\r\n                    }} title=\"Start Quiz\" color={WHITE} backgroundColor={BLUE}/>\r\n                    <TextButton onPress={() => {\r\n                        this.removeDeck()\r\n                    }}>REMOVE DECK</TextButton>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'space-around',\r\n        backgroundColor: YELLOW,\r\n    },\r\n\r\n    header: {\r\n        flex: 2,\r\n        justifyContent: 'space-around'\r\n    },\r\n\r\n    buttonContainer: {\r\n        flex: 1,\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\n\r\nfunction mapStateToProps(decks, {route}) {\r\n    if (!route) return;\r\n    const id = route.params.id;\r\n    if (!id) return {};\r\n    const deck = decks[id];\r\n    if (!deck) return {};\r\n    const deckCard = FlashCardsService.formatDeck(deck, id);\r\n    const flashCardsService = new FlashCardsService('test');\r\n    return {\r\n        deckCard,\r\n        id,\r\n        flashCardsService\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        removeDeckTitle: (title) => dispatch(removeDeck(title))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeckCardDetailComponent);\r\n","import React, {Component} from 'react';\r\nimport {StyleSheet, Text, TextInput, View} from 'react-native';\r\nimport {BLACK, ORANGE, WHITE, YELLOW} from \"../utils/colors\";\r\nimport SubmitButtonComponent from \"../components/SubmitButton.component\";\r\nimport FlashCardsService from \"../services/Flashcards.service\";\r\nimport {addCard} from \"../actions\";\r\nimport {connect} from 'react-redux';\r\n\r\nclass AddCardComponent extends Component {\r\n\r\n    state = {\r\n        question: \"\",\r\n        answer: \"\"\r\n    }\r\n\r\n    toDeckDetail = (id) => {\r\n        const {navigation} = this.props;\r\n        navigation.navigate(\r\n            'DeckCardDetail',\r\n            {id}\r\n        )\r\n    };\r\n\r\n\r\n    changeQuestions = (question) => {\r\n        this.setState(() => ({\r\n            question\r\n        }));\r\n    }\r\n\r\n    changeAnswer = (answer) => {\r\n        this.setState(() => ({\r\n            answer\r\n        }));\r\n    }\r\n\r\n    submit = (title) => {\r\n        const {flashCardsService, addCard} = this.props;\r\n        const {question, answer} = this.state;\r\n\r\n        addCard(title, {question, answer});\r\n\r\n        this.toDeckDetail(title);\r\n\r\n        flashCardsService.addCardToDeck(title, {question, answer});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {id} = this.props;\r\n        const {question, answer} = this.state;\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>Create a new Card</Text>\r\n                <TextInput\r\n                    placeholder=\"Question\"\r\n                    placeholderTextColor={BLACK}\r\n                    style={styles.inputField}\r\n                    onChangeText={this.changeQuestions}\r\n                    value={question}\r\n                />\r\n                <TextInput\r\n                    placeholder=\"Answer\"\r\n                    placeholderTextColor={BLACK}\r\n                    style={styles.inputField}\r\n                    onChangeText={this.changeAnswer}\r\n                    value={answer}\r\n                />\r\n                <SubmitButtonComponent disabled={!(question && answer)} onPress={() => {\r\n                    this.submit(id);\r\n                }} title=\"Create a new card\" color={WHITE} backgroundColor={ORANGE}/>\r\n\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        backgroundColor: YELLOW,\r\n        justifyContent: 'center'\r\n    },\r\n    inputField: {\r\n        height: 40,\r\n        padding: 10,\r\n        marginBottom: 30,\r\n        borderColor: ORANGE,\r\n        borderWidth: 1\r\n    },\r\n    title: {\r\n        color: ORANGE,\r\n        fontSize: 36,\r\n        textAlign: 'center',\r\n        marginBottom: 30\r\n    }\r\n});\r\n\r\n\r\nfunction mapStateToProps({}, {route}) {\r\n    const id = route.params.id;\r\n    const flashCardsService = new FlashCardsService('test');\r\n    return {\r\n        flashCardsService,\r\n        id\r\n    }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addCard: (title, card) => dispatch(addCard(title, card))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCardComponent);\r\n","import React, {Component} from 'react';\r\nimport {StyleSheet, Text, View} from 'react-native';\r\nimport {BLACK, BLUE, ORANGE, PURPLE, RED, WHITE, YELLOW} from \"../utils/colors\";\r\nimport {connect} from \"react-redux\";\r\nimport FlashCardsService from \"../services/Flashcards.service\";\r\nimport SubmitButtonComponent from \"../components/SubmitButton.component\";\r\n\r\n\r\nconst ResultComponent = (props) => {\r\n    const {score} = props;\r\n    return (\r\n        <View style={styles.resultContainer}>\r\n            <Text style={{color: PURPLE, fontSize: 24, textAlign: 'center'}}>{`You scored ${score} points!`}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst CardComponent = (props) => {\r\n    const {content} = props;\r\n    return (\r\n        <View style={styles.resultContainer}>\r\n            <Text style={{color: BLACK, fontSize: 36, textAlign: 'center'}}>{content}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nclass QuizComponent extends Component {\r\n    state = {\r\n        questionNumber: 0,\r\n        score: 0,\r\n        done: false,\r\n        showAnswer: false\r\n    }\r\n\r\n    nextQuestion = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [\"questionNumber\"]: state[\"questionNumber\"] + 1,\r\n                [\"showAnswer\"]: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    incrementScore = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [\"score\"]: state[\"score\"] + 10\r\n            }\r\n        })\r\n    }\r\n\r\n    done = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [\"done\"]: true\r\n            }\r\n        })\r\n    }\r\n\r\n    flip = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [\"showAnswer\"]: !state[\"showAnswer\"]\r\n            }\r\n        })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState(() => ({\r\n            questionNumber: 0,\r\n            score: 0,\r\n            done: false,\r\n            showAnswer: false\r\n        }));\r\n    }\r\n\r\n\r\n    onSubmitAnswer(isCorrect, max) {\r\n        const {questionNumber, done} = this.state;\r\n        if (questionNumber < max && !done) {\r\n            if (isCorrect) this.incrementScore();\r\n            (questionNumber + 1 < max) ? this.nextQuestion() : this.done();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {navigation} = this.props;\r\n        const {deckCard} = this.props;\r\n        navigation.setOptions({title: `${deckCard.title} Quiz`})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {questionNumber, score, done, showAnswer} = this.state;\r\n        const {deckCard} = this.props;\r\n        const {questions, counts} = deckCard;\r\n        const questionCard = questions[questionNumber];\r\n        const {question, answer} = questionCard ? questionCard : {};\r\n        return (\r\n            <View style={styles.container}>\r\n                {counts > 0\r\n                    ? (<React.Fragment>\r\n                        <View style={styles.header}>\r\n                            <Text style={styles.statusBarItem}>\r\n                                {`${questionNumber + 1}/${counts}`}\r\n                            </Text>\r\n                            <Text style={styles.statusBarItem}>\r\n                                {`Score: ${score}`}\r\n                            </Text>\r\n                        </View>\r\n                        <View style={styles.body}>\r\n                            {done\r\n                                ? (<ResultComponent score={score}/>)\r\n                                : (<CardComponent content={showAnswer ? answer : question}/>)\r\n                            }\r\n                        </View>\r\n                        <View style={styles.footer}>\r\n                            {done\r\n                                ? (\r\n                                    <SubmitButtonComponent onPress={() => this.reset()}\r\n                                                           title=\"RESTART\"\r\n                                                           color={WHITE}\r\n                                                           backgroundColor={ORANGE}\r\n                                    />\r\n                                )\r\n                                : showAnswer\r\n                                    ? (<React.Fragment>\r\n                                        <SubmitButtonComponent onPress={() => {\r\n                                            this.onSubmitAnswer(true, counts);\r\n                                        }} disabled={done} title=\"Correct\" color={WHITE} backgroundColor={BLUE}/>\r\n                                        <SubmitButtonComponent onPress={() => {\r\n                                            this.onSubmitAnswer(false, counts);\r\n                                        }} disabled={done} title=\"Incorrect\" color={WHITE} backgroundColor={RED}/>\r\n                                    </React.Fragment>)\r\n                                    : (\r\n                                        <SubmitButtonComponent onPress={() => this.flip()}\r\n                                                               title=\"SHOW ANSWER\"\r\n                                                               color={WHITE}\r\n                                                               backgroundColor={ORANGE}\r\n                                        />\r\n                                    )\r\n                            }\r\n\r\n                        </View>\r\n                    </React.Fragment>)\r\n                    : (\r\n                        <View style={styles.body}>\r\n                            <CardComponent\r\n                                content=\"SORRY! YOU CANNOT TAKE A QUIZ BECAUSE THERE ARE NOT CARDS IN THE DECK\"/>\r\n                        </View>\r\n                    )\r\n                }\r\n\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: YELLOW\r\n    },\r\n\r\n    header: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: 10\r\n    },\r\n\r\n    body: {\r\n        flex: 4,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    footer: {\r\n        flex: 2,\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    resultContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 30\r\n    },\r\n\r\n    statusBarItem: {\r\n        color: PURPLE,\r\n        fontSize: 24\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\nfunction mapStateToProps(decks, {route}) {\r\n    if (!route) return;\r\n    const id = route.params.id;\r\n    if (!id) return {};\r\n    const deck = decks[id];\r\n    if (!deck) return {};\r\n    const deckCard = FlashCardsService.formatDeck(deck, id);\r\n    const flashCardsService = new FlashCardsService('test');\r\n    return {\r\n        deckCard,\r\n        id,\r\n        flashCardsService\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(QuizComponent);\r\n","import {createStackNavigator} from '@react-navigation/stack';\r\nimport React from 'react';\r\nimport {ORANGE, WHITE} from \"../utils/colors\";\r\nimport TabNavComponent from \"./TabNav.component\";\r\nimport DeckCardDetailComponent from \"../Views/DeckCardDetail.component\";\r\nimport AddCardComponent from \"../Views/AddCard.component\";\r\nimport QuizComponent from \"../Views/Quiz.component\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n\r\nfunction MainNavComponent() {\r\n    return (\r\n        <Stack.Navigator headerMode=\"screen\">\r\n            <Stack.Screen\r\n                name=\"Home\"\r\n                component={TabNavComponent}\r\n                options={{\r\n                    headerShown: false,\r\n                }}/>\r\n            <Stack.Screen\r\n                name=\"DeckCardDetail\"\r\n                component={DeckCardDetailComponent}\r\n                options={{\r\n                    title: \"\",\r\n                    headerTintColor: WHITE,\r\n                    headerStyle: {\r\n                        backgroundColor: ORANGE,\r\n                    },\r\n                    headerStatusBarHeight: 0,\r\n                    headerTitleAlign: 'center'\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"AddCard\"\r\n                component={AddCardComponent}\r\n                options={{\r\n                    title: \"Add Card\",\r\n                    headerTintColor: WHITE,\r\n                    headerStyle: {\r\n                        backgroundColor: ORANGE,\r\n                    },\r\n                    headerStatusBarHeight: 0,\r\n                    headerTitleAlign: 'center'\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Quiz\"\r\n                component={QuizComponent}\r\n                options={{\r\n                    title: \"Quiz\",\r\n                    headerTintColor: WHITE,\r\n                    headerStyle: {\r\n                        backgroundColor: ORANGE,\r\n                    },\r\n                    headerStatusBarHeight: 0,\r\n                    headerTitleAlign: 'center'\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\nexport default MainNavComponent;\r\n","import React, {Component} from 'react';\nimport {View} from 'react-native';\nimport {ORANGE} from \"./utils/colors\";\nimport AppStatusBarComponent from \"./components/AppStatusBar.component\";\nimport {createStore} from \"redux\";\nimport reducer from './reducers';\nimport middleware from './middlewares';\nimport {Provider} from \"react-redux\";\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport MainNavComponent from \"./components/MainNav.component\";\n\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Provider store={createStore(reducer, middleware)}>\n                <View style={{flex: 1}}>\n                    <NavigationContainer>\n                        <AppStatusBarComponent backgroundColor={ORANGE}/>\n                        <MainNavComponent/>\n                    </NavigationContainer>\n                </View>\n            </Provider>\n        );\n    }\n\n\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/flashcards/expo-service-worker.js', { scope: '/flashcards/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}