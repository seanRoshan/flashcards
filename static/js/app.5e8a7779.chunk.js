(this.webpackJsonp=this.webpackJsonp||[]).push([[0],{61:function(e,t,n){"use strict";var r=n(1),a=n.n(r),c=n(2),s=n(27),o=n(28),u=n(11),i=n(14),l=n.n(i),f=n(15),d=n.n(f),k=n(31),h=n.n(k),v=n(8),p=n.n(v),w=n(37),m=function(){function e(t){l()(this,e),this.FLASHCARD_STORAGE_KEY=t}return d()(e,[{key:"getDecks",value:function(){var e=this;return new Promise((function(t,n){var r;return p.a.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,p.a.awrap(w.a.getItem(e.FLASHCARD_STORAGE_KEY,null));case 3:return r=a.sent,a.abrupt("return",t(JSON.parse(r)));case 7:return a.prev=7,a.t0=a.catch(0),a.abrupt("return",n(a.t0));case 10:case"end":return a.stop()}}),null,null,[[0,7]],Promise)}))}},{key:"getDeck",value:function(e){var t=this;return new Promise((function(n,r){var a;return p.a.async((function(c){for(;;)switch(c.prev=c.next){case 0:return c.prev=0,c.next=3,p.a.awrap(t.getDecks());case 3:return a=c.sent,c.abrupt("return",n(a[e]));case 7:return c.prev=7,c.t0=c.catch(0),c.abrupt("return",r(c.t0));case 10:case"end":return c.stop()}}),null,null,[[0,7]],Promise)}))}},{key:"saveDeckTitle",value:function(e){var t=this;return new Promise((function(n,r){return p.a.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,p.a.awrap(w.a.mergeItem(t.FLASHCARD_STORAGE_KEY,JSON.stringify(h()({},e,{title:e,questions:[]}))));case 3:return a.abrupt("return",n(!0));case 6:return a.prev=6,a.t0=a.catch(0),a.abrupt("return",r(a.t0));case 9:case"end":return a.stop()}}),null,null,[[0,6]],Promise)}))}},{key:"addCardToDeck",value:function(e,t){var n=this;return new Promise((function(r,a){var c;return p.a.async((function(s){for(;;)switch(s.prev=s.next){case 0:return s.prev=0,s.next=3,p.a.awrap(n.getDecks());case 3:return(c=s.sent)[e].questions.push(t),s.next=7,p.a.awrap(w.a.setItem(n.FLASHCARD_STORAGE_KEY,JSON.stringify(c)));case 7:return s.abrupt("return",r(!0));case 10:return s.prev=10,s.t0=s.catch(0),s.abrupt("return",a(s.t0));case 13:case"end":return s.stop()}}),null,null,[[0,10]],Promise)}))}}]),e}(),D=function(){function e(t){l()(this,e),this.flashCardMockBackEnd=new m(t)}return d()(e,[{key:"getDecks",value:function(){return this.flashCardMockBackEnd.getDecks()}},{key:"getDeck",value:function(e){return this.flashCardMockBackEnd.getDeck(e)}},{key:"saveDeckTitle",value:function(e){return this.flashCardMockBackEnd.saveDeckTitle(e)}},{key:"addCardToDeck",value:function(e,t,n){return this.flashCardMockBackEnd.addCardToDeck(e,{question:t,answer:n})}}]),e}();function E(){return a.a.createElement(u.a,{style:g.container},a.a.createElement(o.a,{onPress:function(){new D("test").getDecks().then((function(e){console.warn(e)}))}},a.a.createElement(s.a,{style:g.testText},"Get Decks")),a.a.createElement(o.a,{onPress:function(){new D("test").getDeck("test").then((function(e){console.warn(e)}))}},a.a.createElement(s.a,{style:g.testText},"Get Deck")),a.a.createElement(o.a,{onPress:function(){new D("test").saveDeckTitle("test").then((function(e){console.warn(e)}))}},a.a.createElement(s.a,{style:g.testText},"Save Title")),a.a.createElement(o.a,{onPress:function(){new D("test").addCardToDeck("test","What is a closure?","The combination of a function and the lexical environment within which that function was declared.").then((function(e){console.warn(e)}))}},a.a.createElement(s.a,{style:g.testText},"Add Card to deck")))}n.d(t,"a",(function(){return E}));var g=c.a.create({container:{flex:1,backgroundColor:"#fff",alignItems:"center",justifyContent:"center"},testText:{color:"#ff6e29",borderRadius:25,borderColor:"#ff6e29",borderWidth:1,padding:10}})},62:function(e,t,n){n(63),e.exports=n(86)},63:function(e,t){"serviceWorker"in navigator&&window.addEventListener("load",(function(){navigator.serviceWorker.register("/flashcards/expo-service-worker.js",{scope:"/flashcards/"}).then((function(e){})).catch((function(e){console.info("Failed to register service-worker",e)}))}))}},[[62,1,2]]]);
//# sourceMappingURL=app.5e8a7779.chunk.js.map